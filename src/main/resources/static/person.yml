# https://medium.com/@jugurtha.aitoufella/implementing-a-reactive-api-using-contract-first-approach-and-clean-architecture-with-spring-boot-3-14280219b394
openapi: "3.0.3"
info:
  description: "This project provides endpoints for creating and getting Persons"
  version: "@project.version@"
  title: "Person API"
  contact:
    email: "gmail.com"
paths:
  /person:
    post:
      tags:
        - Person API
      description: Create a Person
      operationId: createPerson
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonDTO'
      responses:
        200:
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDTO'
  /person/{id}:
    get:
      tags:
        - Person API
      description: get a person with given id
      operationId: getPerson
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: the person with specified ID
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/PersonDTO'
components:
  schemas:
    PersonDTO:
      description: Person DTO
      title: PersonDTO
      type: object
      required: [ id, firstName, lastName, birthDate ]
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date